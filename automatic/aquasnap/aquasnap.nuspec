<?xml version="1.0" encoding="utf-8"?>
<!-- Read this before creating packages: https://docs.chocolatey.org/en-us/create/create-packages -->
<!-- It is especially important to read the above link to understand additional requirements when publishing packages to the community feed aka dot org (https://community.chocolatey.org/packages). -->

<!-- Test your packages in a test environment: https://github.com/chocolatey-community/chocolatey-test-environment -->

<!--
This is a nuspec. It mostly adheres to https://docs.microsoft.com/en-us/nuget/reference/nuspec. Chocolatey uses a special version of NuGet.Core that allows us to do more than was initially possible. As such there are certain things to be aware of:

* the package xmlns schema url may cause issues with nuget.exe
* Any of the following elements can ONLY be used by choco tools - projectSourceUrl, docsUrl, mailingListUrl, bugTrackerUrl, packageSourceUrl, provides, conflicts, replaces
* nuget.exe can still install packages with those elements but they are ignored. Any authoring tools or commands will error on those elements
-->

<!-- You can embed software files directly into packages, as long as you are not bound by distribution rights. -->
<!-- * If you are an organization making private packages, you probably have no issues here -->
<!-- * If you are releasing to the community feed, you need to consider distribution rights. -->
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <!-- == PACKAGE SPECIFIC SECTION == -->
    <!-- This section is about this package, although id and version have ties back to the software -->
    <!-- id is lowercase and if you want a good separator for words, use '-', not '.'. Dots are only acceptable as suffixes for certain types of packages, e.g. .install, .portable, .extension, .template -->
    <!-- If the software is cross-platform, attempt to use the same id as the debian/rpm package(s) if possible. -->
    <id>aquasnap</id>
    <!-- version should MATCH as closely as possible with the underlying software -->
    <!-- Is the version a prerelease of a version? https://docs.microsoft.com/en-us/nuget/concepts/package-versioning#creating-prerelease-packages -->
    <!-- Note that unstable versions like 0.0.1 can be considered a released version, but it's possible that one can release a 0.0.1-beta before you release a 0.0.1 version. If the version number is final, that is considered a released version and not a prerelease. -->
    <version>1.24.1</version>
    <!-- owners is a poor name for maintainers of the package. It sticks around by this name for compatibility reasons. It basically means you. -->
    <owners>Jivko Kolev, Tim Biermann, virtualex</owners>
    <!-- ============================== -->

    <!-- == SOFTWARE SPECIFIC SECTION == -->
    <!-- This section is about the software itself -->
    <title>AquaSnap</title>
    <authors>Nurgo Sofware</authors>
    <!-- projectUrl is required for the community feed -->
    <projectUrl>http://www.nurgo-software.com/products/aquasnap</projectUrl>
    <iconUrl>https://rawcdn.githack.com/virtualex-itv/chocolatey-packages/a6ddae1ded009908fcc241536886d0bca8d14a59/icons/aquasnap.png</iconUrl>
    <!-- copyright is usually years and software vendor, but not required for internal feeds -->
    <copyright>Copyright © 2024, Nurgo Sofware</copyright>
    <tags>Window manager dock snap tile organize</tags>
    <releaseNotes>https://www.nurgo-software.com/company/news/13-aquasnap/</releaseNotes>
    <licenseUrl>https://www.nurgo-software.com/company/eula/80-aquasnap</licenseUrl>
    <packageSourceUrl>https://github.com/virtualex-itv/chocolatey-packages/tree/master/automatic/aquasnap</packageSourceUrl>
    <docsUrl>https://help.nurgo-software.com/collection/1-aquasnap</docsUrl>
    <summary>Window manager for Windows</summary>
    <description><![CDATA[AquaSnap greatly enhances the way you can arrange windows on your Desktop. It gives you the possibility to snap windows to the edges or to the corners of the desktop, set windows to remain on top, stretch windows and more. It is freeware for personal single-monitor use only.

This software requires a license for all options to be available, but there is a 60 minutes trial for it and there are free options as well.

Features:

- Window docking: Drag and Drop your windows to the sides or corners of the screen and they are automatically resized to fit one half or one quarter of the screen. Just like the built-in Aero Snap function of Windows 7 but with more possibilities! This is especially useful on a 4K monitor or on multiple monitors.
- Window tiling: When two windows are side by side, resizing one of them while pressing [Ctrl] will also resize the other one. It's an easy and powerful way to modify the layout of several tiled windows.
- Window snapping: AquaSnap allows you to easily align your windows by making them behave like magnets. This simple feature is the cornerstone of AquaSnap and has been carefully designed to assist you without getting in your way.
- Window stretching: This is another powerful way to quickly split your desktop space between several windows. Double-click on the edge of a window to maximize it in one direction. Do the same while pressing [Shift] to maximize it vertically or horizontally.
- Move windows together: Professional applications with complex UI often scatter small toolbox windows on your desktop. Keep them grouped and move them all at once. Move one window while pressing [Ctrl] and the whole group of adjacent windows will follow.
- Make it stay on top: This is the best way to have this window always visible while working on a fullscreen application. Shake a window to make it transparent and always on top. Shake it again to restore it's normal state.

**Please Note**: This is an automatically updated package. If you find it is out of date by more than a day or two, please contact the maintainer(s) and let them know the package is no longer updating correctly.
]]></description>
    <!-- =============================== -->

    <!-- Specifying dependencies and version ranges? https://docs.microsoft.com/en-us/nuget/concepts/package-versioning#specifying-version-ranges-in-.nuspec-files -->
    <!--<dependencies>
      <dependency id="" version="__MINIMUM_VERSION__" />
      <dependency id="" version="[__EXACT_VERSION__]" />
      <dependency id="" version="[_MIN_VERSION_INCLUSIVE, MAX_VERSION_INCLUSIVE]" />
      <dependency id="" version="[_MIN_VERSION_INCLUSIVE, MAX_VERSION_EXCLUSIVE)" />
      <dependency id="" />
    </dependencies>-->

    <!--<provides>NOT YET IMPLEMENTED</provides>-->
    <!--<conflicts>NOT YET IMPLEMENTED</conflicts>-->
    <!--<replaces>NOT YET IMPLEMENTED</replaces>-->
  </metadata>
  <!-- this section controls what actually gets packaged into the Chocolatey package -->
  <!-- Uncomment to limit what is packed in -->
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
